# remove unlabeled genes
liver.comparison1.known <- liver.comparison1[which(!rownames(liver.comparison1) %in% liver.DEgenes.unknown),]
liver.comparison2.known <- liver.comparison2[which(!rownames(liver.comparison2) %in% liver.DEgenes.unknown),]
# remove unlabeled genes
liver.comparison1 <- liver.comparison1[which(!rownames(liver.comparison1) %in% liver.DEgenes.unknown),]
liver.comparison2 <- liver.comparison2[which(!rownames(liver.comparison2) %in% liver.DEgenes.unknown),]
# box plot for top 10 DE genes in CR mice against control mice in liver
liver_exprs.norm.DE <- liver_exprs.norm[rownames(liver.comparison1)[1:50],]
liver_exprs.norm.DE$Gene <- rownames(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt <- melt(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt$Group <- c(rep('SD-L',250),rep('SD-MET-L',250),rep('CR-L',250))
liver_exprs.norm.DE.melt$variable <- NULL
liver_exprs.norm.DE.summary <- liver_exprs.norm.DE.melt %>% group_by(Gene,Group) %>% summarise_at(vars(value), list(mean, sd))
DEgenes_sorted <- rownames(liver.comparison1[1:50,][order(liver.comparison1[1:50,]$logFC),])
liver_exprs.norm.DE.summary$Gene <- factor(liver_exprs.norm.DE.summary$Gene, levels = DEgenes_sorted)
p <- ggplot(liver_exprs.norm.DE.summary, aes(x=Gene, y=fn1, fill=Group)) + geom_bar(stat="identity", position=position_dodge()) + geom_errorbar(aes(ymin=fn1-fn2, ymax=fn1+fn2), width=.2,position=position_dodge(.9))
p+labs(x='Gene',y='RPKM')+ggtitle('Gene Expression of Mouse Liver')+coord_flip()
# box plot for top 50 DE genes in SD-MET mice against control mice in liver
liver_exprs.norm.DE <- liver_exprs.norm[rownames(liver.comparison2)[1:50],]
liver_exprs.norm.DE$Gene <- rownames(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt <- melt(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt$Group <- c(rep('SD-L',250),rep('SD-MET-L',250),rep('CR-L',250))
liver_exprs.norm.DE.melt$variable <- NULL
liver_exprs.norm.DE.summary <- liver_exprs.norm.DE.melt %>% group_by(Gene,Group) %>% summarise_at(vars(value), list(mean, sd))
DEgenes_sorted <- rownames(liver.comparison2[1:50,][order(liver.comparison2[1:50,]$logFC),])
liver_exprs.norm.DE.summary$Gene <- factor(liver_exprs.norm.DE.summary$Gene, levels = DEgenes_sorted)
p <- ggplot(liver_exprs.norm.DE.summary, aes(x=Gene, y=fn1, fill=Group)) + geom_bar(stat="identity", position=position_dodge()) + geom_errorbar(aes(ymin=fn1-fn2, ymax=fn1+fn2), width=.2,position=position_dodge(.9))
p+labs(x='Gene',y='RPKM')+ggtitle('Gene Expression of Mouse Liver')+coord_flip()
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 50 DE Genes in CR Mice against Control Mice in Liver')+coord_flip()
p <- ggplot(liver_exprs.norm.DE.summary, aes(x=Gene, y=fn1, fill=Group)) + geom_bar(stat="identity", position=position_dodge()) + geom_errorbar(aes(ymin=fn1-fn2, ymax=fn1+fn2), width=.2,position=position_dodge(.9))
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 50 DE Genes in CR Mice against Control Mice in Liver')+coord_flip()
# box plot for all DE genes in muscle
muscle_exprs.norm.DE <- muscle_exprs.norm[rownames(muscle.comparison1),]
muscle_exprs.norm.DE$Gene <- rownames(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt <- melt(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt$Group <- c(rep('SD-L',56*5),rep('SD-MET-L',56*5),rep('CR-L',56*5))
View(muscle_exprs.norm.DE.melt)
muscle_exprs.norm.DE.melt$variable <- NULL
muscle_exprs.norm.DE.summary <- muscle_exprs.norm.DE.melt %>% group_by(Gene,Group) %>% summarise_at(vars(value), list(mean, sd))
DEgenes_sorted <- rownames(muscle.comparison1[order(muscle.comparison1$logFC),])
muscle_exprs.norm.DE.summary$Gene <- factor(muscle_exprs.norm.DE.summary$Gene, levels = DEgenes_sorted)
p <- ggplot(muscle_exprs.norm.DE.summary, aes(x=Gene, y=fn1, fill=Group)) + geom_bar(stat="identity", position=position_dodge()) + geom_errorbar(aes(ymin=fn1-fn2, ymax=fn1+fn2), width=.2,position=position_dodge(.9))
p+labs(x='Gene',y='Log Z-Score')+ggtitle('DE Genes in Mouse Muscle')+coord_flip()
# box plot for top 50 DE genes in CR mice against control mice in liver
liver_exprs.norm.DE <- liver_exprs.norm[rownames(liver.comparison1)[1:50],]
liver_exprs.norm.DE$Gene <- rownames(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt <- melt(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt$Group <- c(rep('SD-L',250),rep('SD-MET-L',250),rep('CR-L',250))
liver_exprs.norm.DE.melt$variable <- NULL
liver_exprs.norm.DE.summary <- liver_exprs.norm.DE.melt %>% group_by(Gene,Group) %>% summarise_at(vars(value), list(mean, sd))
DEgenes_sorted <- rownames(liver.comparison1[1:50,][order(liver.comparison1[1:50,]$logFC),])
liver_exprs.norm.DE.summary$Gene <- factor(liver_exprs.norm.DE.summary$Gene, levels = DEgenes_sorted)
p <- ggplot(liver_exprs.norm.DE.summary, aes(x=Gene, y=fn1, fill=Group)) + geom_bar(stat="identity", position=position_dodge()) + geom_errorbar(aes(ymin=fn1-fn2, ymax=fn1+fn2), width=.2,position=position_dodge(.9))
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 50 DE Genes in CR Mice against Control Mice in Liver')+coord_flip()
# box plot for top 50 DE genes in SD-MET mice against control mice in liver
liver_exprs.norm.DE <- liver_exprs.norm[rownames(liver.comparison2)[1:50],]
liver_exprs.norm.DE$Gene <- rownames(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt <- melt(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt$Group <- c(rep('SD-L',250),rep('SD-MET-L',250),rep('CR-L',250))
liver_exprs.norm.DE.melt$variable <- NULL
liver_exprs.norm.DE.summary <- liver_exprs.norm.DE.melt %>% group_by(Gene,Group) %>% summarise_at(vars(value), list(mean, sd))
DEgenes_sorted <- rownames(liver.comparison2[1:50,][order(liver.comparison2[1:50,]$logFC),])
liver_exprs.norm.DE.summary$Gene <- factor(liver_exprs.norm.DE.summary$Gene, levels = DEgenes_sorted)
p <- ggplot(liver_exprs.norm.DE.summary, aes(x=Gene, y=fn1, fill=Group)) + geom_bar(stat="identity", position=position_dodge()) + geom_errorbar(aes(ymin=fn1-fn2, ymax=fn1+fn2), width=.2,position=position_dodge(.9))
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 50 DE Genes in SD-MET-L Mice against Control Mice in Liver')+coord_flip()
# box plot for all DE genes in muscle
muscle_exprs.norm.DE <- muscle_exprs.norm[rownames(muscle.comparison1),]
muscle_exprs.norm.DE$Gene <- rownames(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt <- melt(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt$Group <- c(rep('SD-L',56*5),rep('SD-MET-L',56*5),rep('CR-L',56*5))
muscle_exprs.norm.DE.melt$variable <- NULL
muscle_exprs.norm.DE.summary <- muscle_exprs.norm.DE.melt %>% group_by(Gene,Group) %>% summarise_at(vars(value), list(mean, sd))
DEgenes_sorted <- rownames(muscle.comparison1[order(muscle.comparison1$logFC),])
muscle_exprs.norm.DE.summary$Gene <- factor(muscle_exprs.norm.DE.summary$Gene, levels = DEgenes_sorted)
p <- ggplot(muscle_exprs.norm.DE.summary, aes(x=Gene, y=fn1, fill=Group)) + geom_bar(stat="identity", position=position_dodge()) + geom_errorbar(aes(ymin=fn1-fn2, ymax=fn1+fn2), width=.2,position=position_dodge(.9))
p+labs(x='Gene',y='Log Z-Score')+ggtitle('DE Genes in Mouse Muscle')+coord_flip()
# box plot of gene expression distribution for each sample
mouse_exprs.liver.norm.melt <- melt(liver_exprs.norm)
p <- ggplot(mouse_exprs.liver.norm.melt, aes(factor(variable), value))
p + geom_boxplot()+theme(axis.text.x = element_text(angle=35,hjust=1))+labs(x='Sample',y='Log Z-Score')+ggtitle('Gene Expression of Mouse Liver')
mouse_exprs.muscle.norm.melt <- melt(muscle_exprs.norm)
p <- ggplot(mouse_exprs.muscle.norm.melt, aes(factor(variable), value))
p + geom_boxplot()+theme(axis.text.x = element_text(angle=35,hjust=1))+labs(x='Sample',y='Log Z-Score')+ggtitle('Gene Expression of Mouse Muscle')
a <- liver.comparison1[1:50,][order(liver.comparison1[1:50,]$logFC),]
View(a)
a <- liver.comparison2[1:50,][order(liver.comparison2[1:50,]$logFC),]
View(a)
install.packages("installr")
install.packages('taxize')
library(ggplot2)
library(limma)
# load data
mouse_exprs <- read.csv('/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_expression(1).csv', stringsAsFactors = FALSE)
mouse_pheno <- read.csv('/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_mouse_pheno.csv', stringsAsFactors = FALSE)
# process muscle tissue dataset
muscle_exprs <- mouse_exprs[,c(1:16)]
muscle_exprs <- muscle_exprs[complete.cases(muscle_exprs),]
muscle_exprs.unknown <- muscle_exprs[which(muscle_exprs$X==''),]
muscle_exprs.unknown$X <- as.character(1:nrow(muscle_exprs.unknown))
muscle_exprs <- muscle_exprs[which(muscle_exprs$X!=''),]
demult.muscle_exprs <- rbind(muscle_exprs,muscle_exprs.unknown)
row.names(demult.muscle_exprs) <- make.unique(demult.muscle_exprs$X)
demult.muscle_exprs$X <- NULL
muscle_exprs.norm <- demult.muscle_exprs
design.1 <- model.matrix(~0+factor(c(rep(1,5),rep(2,5))))
colnames(design.1) <- c('SD.L','CR.L')
contrast.matrix.1 <- makeContrasts(CR.L - SD.L,levels=design.1)
design.2 <- model.matrix(~0+factor(c(rep(1,5),rep(2,5))))
colnames(design.2) <- c('SD.L','SD.MET.L')
contrast.matrix.2 <- makeContrasts(SD.MET.L - SD.L,levels=design.2)
# DE gene analysis for muscle tissue (CR vs SD)
muscle.fit <- lmFit(muscle_exprs.norm[,c(1:5,11:15)],design.1)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix.1)
muscle.fit2 <- eBayes(muscle.fit2, 0.01)
muscle.comparison1 <- topTable(muscle.fit2, adjust='fdr', p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE gene analysis for muscle tissue (Met vs SD)
muscle.fit <- lmFit(muscle_exprs.norm[,1:10],design.2)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix.2)
muscle.fit2 <- eBayes(muscle.fit2, 0.01)
muscle.comparison2 <- topTable(muscle.fit2, adjust='fdr', p.value = 0.05, number = nrow(muscle_exprs.norm))
muscle.comparison1 <- topTable(muscle.fit2, adjust='fdr', number = nrow(muscle_exprs.norm))
# DE gene analysis for muscle tissue (CR vs SD)
muscle.fit <- lmFit(muscle_exprs.norm[,c(1:5,11:15)],design.1)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix.1)
muscle.fit2 <- eBayes(muscle.fit2, 0.01)
muscle.comparison1 <- topTable(muscle.fit2, adjust='fdr', number = nrow(muscle_exprs.norm))
# DE gene analysis for muscle tissue (Met vs SD)
muscle.fit <- lmFit(muscle_exprs.norm[,1:10],design.2)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix.2)
muscle.fit2 <- eBayes(muscle.fit2, 0.01)
muscle.comparison2 <- topTable(muscle.fit2, adjust='fdr', number = nrow(muscle_exprs.norm))
muscle.comparison1['Mfap5',]
View(muscle.comparison2)
muscle.comparison2['Mfap5',]
View(muscle.comparison1)
mouse_exprs.comp <- mouse_exprs[complete.cases(mouse_exprs),]
row.names(mouse_exprs.comp) <- make.unique(mouse_exprs.comp$X)
mouse_exprs.comp$X <- NULL
mouse_exprs.pca <- prcomp(t(mouse_exprs.comp))
p <- ggbiplot(mouse_exprs.pca., var.axes = FALSE,groups = c(rep('Muscle',15),rep('LiverL',15)),ellipse = TRUE)
library(ggbiplot)
install.packages('ggbiplot')
library(devtools)
install.packages('devtool')
install.packages('devtools')
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
p <- ggbiplot(mouse_exprs.pca., var.axes = FALSE,groups = c(rep('Muscle',15),rep('LiverL',15)),ellipse = TRUE)
p <- ggbiplot(mouse_exprs.pca, var.axes = FALSE,groups = c(rep('Muscle',15),rep('LiverL',15)),ellipse = TRUE)
p + ggtitle('PCA of Mouse Samples')
p <- ggbiplot(mouse_exprs.pca, var.axes = FALSE,groups = c(rep('Muscle',15),rep('LiverL',15)))
p + ggtitle('PCA of Mouse Samples')
p <- ggbiplot(mouse_exprs.pca, var.axes = FALSE,groups = c(rep('Muscle',15),rep('Liver',15)))
p + ggtitle('PCA of Mouse Samples')
# process liver tissue dataset
liver_exprs <- mouse_exprs[,-c(2:16)]
liver_exprs <- liver_exprs[complete.cases(liver_exprs),]
liver_exprs.unknown <- liver_exprs[which(liver_exprs$X==''),]
liver_exprs.unknown$X <- as.character(1:nrow(liver_exprs.unknown))
liver_exprs <- liver_exprs[which(liver_exprs$X!=''),]
#demult.liver_exprs <- aggregate(.~X,data=liver_exprs,FUN=median)
demult.liver_exprs <- rbind(liver_exprs,liver_exprs.unknown)
row.names(demult.liver_exprs) <- make.unique(demult.liver_exprs$X)
demult.liver_exprs$X <- NULL
liver_exprs.norm <- demult.liver_exprs
# DE gene analysis for liver tissue (CR vs SD)
liver.fit <- lmFit(liver_exprs.norm[,c(1:5,11:15)],design.1)
liver.fit2 <- contrasts.fit(liver.fit,contrast.matrix.1)
liver.fit2 <- eBayes(liver.fit2)
liver.comparison1 <- topTable(liver.fit2, adjust="fdr", p.value = 0.05, number = nrow(liver_exprs.norm))
# DE gene analysis for liver tissue (Met vs SD)
liver.fit <- lmFit(liver_exprs.norm[,c(1:10)],design.2)
liver.fit2 <- contrasts.fit(liver.fit,contrast.matrix.2)
liver.fit2 <- eBayes(liver.fit2)
liver.comparison2 <- topTable(liver.fit2, adjust='fdr', p.value = 0.05, number = nrow(liver_exprs.norm))
# process muscle tissue dataset
muscle_exprs <- mouse_exprs[,c(1:16)]
muscle_exprs <- muscle_exprs[complete.cases(muscle_exprs),]
muscle_exprs.unknown <- muscle_exprs[which(muscle_exprs$X==''),]
muscle_exprs.unknown$X <- as.character(1:nrow(muscle_exprs.unknown))
muscle_exprs <- muscle_exprs[which(muscle_exprs$X!=''),]
demult.muscle_exprs <- aggregate(.~X,data=muscle_exprs,FUN=median)
demult.muscle_exprs <- rbind(demult.muscle_exprs,muscle_exprs.unknown)
row.names(demult.muscle_exprs) <- make.unique(demult.muscle_exprs$X)
demult.muscle_exprs$X <- NULL
muscle_exprs.norm <- demult.muscle_exprs
# process liver tissue dataset
liver_exprs <- mouse_exprs[,-c(2:16)]
liver_exprs <- liver_exprs[complete.cases(liver_exprs),]
liver_exprs.unknown <- liver_exprs[which(liver_exprs$X==''),]
liver_exprs.unknown$X <- as.character(1:nrow(liver_exprs.unknown))
liver_exprs <- liver_exprs[which(liver_exprs$X!=''),]
demult.liver_exprs <- aggregate(.~X,data=liver_exprs,FUN=median)
demult.liver_exprs <- rbind(demult.liver_exprs,liver_exprs.unknown)
row.names(demult.liver_exprs) <- make.unique(demult.liver_exprs$X)
demult.liver_exprs$X <- NULL
liver_exprs.norm <- demult.liver_exprs
# DE gene analysis for muscle tissue (CR vs SD)
muscle.fit <- lmFit(muscle_exprs.norm[,c(1:5,11:15)],design.1)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix.1)
muscle.fit2 <- eBayes(muscle.fit2, 0.01)
muscle.comparison1 <- topTable(muscle.fit2, adjust='fdr', number = nrow(muscle_exprs.norm))
# DE gene analysis for muscle tissue (Met vs SD)
muscle.fit <- lmFit(muscle_exprs.norm[,1:10],design.2)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix.2)
muscle.fit2 <- eBayes(muscle.fit2, 0.01)
muscle.comparison2 <- topTable(muscle.fit2, adjust='fdr', number = nrow(muscle_exprs.norm))
muscle.comparison1 <- topTable(muscle.fit2, adjust='bh', p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE gene analysis for muscle tissue (CR vs SD)
muscle.fit <- lmFit(muscle_exprs.norm[,c(1:5,11:15)],design.1)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix.1)
muscle.fit2 <- eBayes(muscle.fit2, 0.01)
muscle.comparison1 <- topTable(muscle.fit2, adjust='BH', p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE gene analysis for muscle tissue (Met vs SD)
muscle.fit <- lmFit(muscle_exprs.norm[,1:10],design.2)
muscle.fit2 <- contrasts.fit(muscle.fit,contrast.matrix.2)
muscle.fit2 <- eBayes(muscle.fit2, 0.01)
muscle.comparison2 <- topTable(muscle.fit2, adjust='BH', p.value- 0.05, number = nrow(muscle_exprs.norm))
muscle.comparison2 <- topTable(muscle.fit2, adjust='BH', p.value = 0.05, number = nrow(muscle_exprs.norm))
# DE gene analysis for liver tissue (CR vs SD)
liver.fit <- lmFit(liver_exprs.norm[,c(1:5,11:15)],design.1)
liver.fit2 <- contrasts.fit(liver.fit,contrast.matrix.1)
liver.fit2 <- eBayes(liver.fit2)
liver.comparison1 <- topTable(liver.fit2, adjust="BH", p.value = 0.05, number = nrow(liver_exprs.norm))
# DE gene analysis for liver tissue (Met vs SD)
liver.fit <- lmFit(liver_exprs.norm[,c(1:10)],design.2)
liver.fit2 <- contrasts.fit(liver.fit,contrast.matrix.2)
liver.fit2 <- eBayes(liver.fit2)
liver.comparison2 <- topTable(liver.fit2, adjust='BH', p.value = 0.05, number = nrow(liver_exprs.norm))
#save results
write.csv(muscle.comparison1,'/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/mouse_muscle_CRvsSD.csv')
write.csv(muscle.comparison2,'/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/mouse_muscle_METvsSD.csv')
write.csv(liver.comparison1,'/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/mouse_liver_CRvsSD.csv')
write.csv(liver.comparison2,'/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/mouse_liver_METvsSD.csv')
# box plot for top 10 DE genes in CR mice against control mice in liver
liver_exprs.norm.DE <- liver_exprs.norm[rownames(liver.comparison1)[1:10],]
liver_exprs.norm.DE <- liver_exprs.norm.DE[,c(1:5,11:15)]
liver_exprs.norm.DE$Gene <- rownames(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt <- melt(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt$Group <- c(rep('SD-L',50),rep('CR-L',50))
library(reshape)
# box plot for top 10 DE genes in CR mice against control mice in liver
liver_exprs.norm.DE <- liver_exprs.norm[rownames(liver.comparison1)[1:10],]
liver_exprs.norm.DE <- liver_exprs.norm.DE[,c(1:5,11:15)]
liver_exprs.norm.DE$Gene <- rownames(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt <- melt(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt$Group <- c(rep('SD-L',50),rep('CR-L',50))
liver_exprs.norm.DE.melt$variable <- NULL
p <- ggplot(liver_exprs.norm.DE.melt, aes(x=Gene, y=value, fill=Group)) + geom_boxplot()
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 10 DE Genes in CR Mice against Control Mice in Liver')+facet_grid(. ~ Gene, scales = "free", space = "free")
# box plot for top 10 DE genes in SD-MET mice against control mice in liver
liver_exprs.norm.DE <- liver_exprs.norm[rownames(liver.comparison2)[1:10],]
liver_exprs.norm.DE <- liver_exprs.norm.DE[,c(1:10)]
liver_exprs.norm.DE$Gene <- rownames(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt <- melt(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt$Group <- c(rep('SD-L',50),rep('SD-MET-L',50))
liver_exprs.norm.DE.melt$variable <- NULL
p <- ggplot(liver_exprs.norm.DE.melt, aes(x=Gene, y=value, fill=Group)) + geom_boxplot()
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 10 DE Genes in SD-MET-L Mice against Control Mice in Liver')+facet_grid(. ~ Gene, scales = "free", space = "free")
# box plot for top 10 DE genes in CR mice against control mice in muscle
muscle_exprs.norm.DE <- muscle_exprs.norm[rownames(muscle.comparison1)[1:10],]
muscle_exprs.norm.DE <- muscle_exprs.norm.DE[,c(1:5,11:15)]
muscle_exprs.norm.DE$Gene <- rownames(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt <- melt(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt$Group <- c(rep('SD-L',50),rep('CR-L',50))
muscle_exprs.norm.DE.melt$variable <- NULL
p <- ggplot(muscle_exprs.norm.DE.melt, aes(x=Gene, y=value, fill=Group)) + geom_boxplot()
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 10 DE Genes in CR Mice against Control Mice in Muscle')+facet_grid(. ~ Gene, scales = "free", space = "free")
# box plot for top 10 DE genes in SD-MET mice against control mice in muscle
muscle_exprs.norm.DE <- muscle_exprs.norm[rownames(muscle.comparison2)[1:10],]
muscle_exprs.norm.DE <- muscle_exprs.norm.DE[,c(1:10)]
muscle_exprs.norm.DE$Gene <- rownames(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt <- melt(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt$Group <- c(rep('SD-L',50),rep('SD-MET-L',50))
muscle_exprs.norm.DE.melt$variable <- NULL
p <- ggplot(muscle_exprs.norm.DE.melt, aes(x=Gene, y=value, fill=Group)) + geom_boxplot()
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 10 DE Genes in SD-MET-L Mice against Control Mice in Muscle')+facet_grid(. ~ Gene, scales = "free", space = "free")+theme(axis.text.x = element_text(angle=35,hjust=1))
muscle.DEgenes <- unique(c(rownames(muscle.comparison1),rownames(muscle.comparison2)))
liver.DEgenes <- unique(c(rownames(liver.comparison1),rownames(liver.comparison2)))
muscle.DEgenes.unknown <- muscle.DEgenes[which(muscle.DEgenes %in% muscle_exprs.unknown$X)]
liver.DEgenes.unknown <- liver.DEgenes[which(liver.DEgenes %in% liver_exprs.unknown$X)]
# remove unlabeled genes
liver.comparison1 <- liver.comparison1[which(!rownames(liver.comparison1) %in% liver.DEgenes.unknown),]
liver.comparison2 <- liver.comparison2[which(!rownames(liver.comparison2) %in% liver.DEgenes.unknown),]
# box plot for top 10 DE genes in CR mice against control mice in liver
liver_exprs.norm.DE <- liver_exprs.norm[rownames(liver.comparison1)[1:10],]
liver_exprs.norm.DE <- liver_exprs.norm.DE[,c(1:5,11:15)]
liver_exprs.norm.DE$Gene <- rownames(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt <- melt(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt$Group <- c(rep('SD-L',50),rep('CR-L',50))
liver_exprs.norm.DE.melt$variable <- NULL
p <- ggplot(liver_exprs.norm.DE.melt, aes(x=Gene, y=value, fill=Group)) + geom_boxplot()
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 10 DE Genes in CR Mice against Control Mice in Liver')+facet_grid(. ~ Gene, scales = "free", space = "free")
View(liver.comparison1)
# box plot for top 10 DE genes in SD-MET mice against control mice in liver
liver_exprs.norm.DE <- liver_exprs.norm[rownames(liver.comparison2)[1:10],]
liver_exprs.norm.DE <- liver_exprs.norm.DE[,c(1:10)]
liver_exprs.norm.DE$Gene <- rownames(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt <- melt(liver_exprs.norm.DE)
liver_exprs.norm.DE.melt$Group <- c(rep('SD-L',50),rep('SD-MET-L',50))
liver_exprs.norm.DE.melt$variable <- NULL
p <- ggplot(liver_exprs.norm.DE.melt, aes(x=Gene, y=value, fill=Group)) + geom_boxplot()
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 10 DE Genes in SD-MET-L Mice against Control Mice in Liver')+facet_grid(. ~ Gene, scales = "free", space = "free")
View(liver.comparison2)
# box plot for top 10 DE genes in CR mice against control mice in muscle
muscle_exprs.norm.DE <- muscle_exprs.norm[rownames(muscle.comparison1)[1:10],]
View(muscle_exprs.norm.DE)
View(muscle.comparison1)
muscle_exprs.norm.DE <- muscle_exprs.norm.DE[,c(1:5,11:15)]
# box plot for top 10 DE genes in CR mice against control mice in muscle
muscle_exprs.norm.DE <- muscle_exprs.norm[rownames(muscle.comparison1)[1:10],]
muscle_exprs.norm.DE <- muscle_exprs.norm.DE[,c(1:5,11:15)]
muscle_exprs.norm.DE$Gene <- rownames(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt <- melt(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt$Group <- c(rep('SD-L',50),rep('CR-L',50))
muscle_exprs.norm.DE.melt$variable <- NULL
p <- ggplot(muscle_exprs.norm.DE.melt, aes(x=Gene, y=value, fill=Group)) + geom_boxplot()
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 10 DE Genes in CR Mice against Control Mice in Muscle')+facet_grid(. ~ Gene, scales = "free", space = "free")
# box plot for top 10 DE genes in CR mice against control mice in muscle
muscle_exprs.norm.DE <- muscle_exprs.norm[rownames(muscle.comparison1)[1:10],]
muscle_exprs.norm.DE <- muscle_exprs.norm.DE[,c(1:5,11:15)]
muscle_exprs.norm.DE$Gene <- rownames(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt <- melt(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt$Group <- c(rep('SD-L',50),rep('CR-L',50))
muscle_exprs.norm.DE.melt$variable <- NULL
p <- ggplot(muscle_exprs.norm.DE.melt, aes(x=Gene, y=value, fill=Group)) + geom_boxplot()
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 10 DE Genes in CR Mice against Control Mice in Muscle')+facet_grid(. ~ Gene, scales = "free", space = "free")
# box plot for top 10 DE genes in SD-MET mice against control mice in muscle
muscle_exprs.norm.DE <- muscle_exprs.norm[rownames(muscle.comparison2)[1:10],]
muscle_exprs.norm.DE <- muscle_exprs.norm.DE[,c(1:10)]
muscle_exprs.norm.DE$Gene <- rownames(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt <- melt(muscle_exprs.norm.DE)
muscle_exprs.norm.DE.melt$Group <- c(rep('SD-L',50),rep('SD-MET-L',50))
muscle_exprs.norm.DE.melt$variable <- NULL
p <- ggplot(muscle_exprs.norm.DE.melt, aes(x=Gene, y=value, fill=Group)) + geom_boxplot()
p+labs(x='Gene',y='Log Z-Score')+ggtitle('Top 10 DE Genes in SD-MET-L Mice against Control Mice in Muscle')+facet_grid(. ~ Gene, scales = "free", space = "free")+theme(axis.text.x = element_text(angle=35,hjust=1))
# process muscle tissue dataset
muscle_exprs <- mouse_exprs[,c(1:16)]
muscle_exprs <- muscle_exprs[complete.cases(muscle_exprs),]
muscle_exprs.unknown <- muscle_exprs[which(muscle_exprs$X==''),]
muscle_exprs.unknown$X <- as.character(1:nrow(muscle_exprs.unknown))
muscle_exprs <- muscle_exprs[which(muscle_exprs$X!=''),]
demult.muscle_exprs <- aggregate(.~X,data=muscle_exprs,FUN=median)
demult.muscle_exprs <- rbind(demult.muscle_exprs,muscle_exprs.unknown)
row.names(demult.muscle_exprs) <- make.unique(demult.muscle_exprs$X)
demult.muscle_exprs$X <- NULL
muscle_exprs.norm <- demult.muscle_exprs
# process liver tissue dataset
liver_exprs <- mouse_exprs[,-c(2:16)]
liver_exprs <- liver_exprs[complete.cases(liver_exprs),]
liver_exprs.unknown <- liver_exprs[which(liver_exprs$X==''),]
liver_exprs.unknown$X <- as.character(1:nrow(liver_exprs.unknown))
liver_exprs <- liver_exprs[which(liver_exprs$X!=''),]
demult.liver_exprs <- aggregate(.~X,data=liver_exprs,FUN=median)
demult.liver_exprs <- rbind(demult.liver_exprs,liver_exprs.unknown)
row.names(demult.liver_exprs) <- make.unique(demult.liver_exprs$X)
demult.liver_exprs$X <- NULL
liver_exprs.norm <- demult.liver_exprs
# process liver tissue dataset
liver_exprs <- mouse_exprs[,-c(2:16)]
liver_exprs <- liver_exprs[complete.cases(liver_exprs),]
liver_exprs.unknown <- liver_exprs[which(liver_exprs$X==''),]
liver_exprs.unknown$X <- as.character(1:nrow(liver_exprs.unknown))
liver_exprs <- liver_exprs[which(liver_exprs$X!=''),]
demult.liver_exprs <- aggregate(.~X,data=liver_exprs,FUN=median)
demult.liver_exprs <- rbind(demult.liver_exprs,liver_exprs.unknown)
row.names(demult.liver_exprs) <- make.unique(demult.liver_exprs$X)
demult.liver_exprs$X <- NULL
liver_exprs.norm <- demult.liver_exprs
# PCA for muscle tissue with DE genes
muscle_exprs.pca <- prcomp(t(muscle_exprs.norm))
p <- ggbiplot(muscle_exprs.pca, var.axes = FALSE,groups = c(rep('SD-L',5),rep('SD-MET-L',5),rep('CR-L',5)),ellipse = TRUE)
p + ggtitle('PCA of Mouse Muscle Samples')
# PCA for muscle tissue with DE genes
muscle_exprs.pca <- prcomp(t(muscle_exprs.norm[,-c(13)]))
p <- ggbiplot(muscle_exprs.pca, var.axes = FALSE,groups = c(rep('SD-L',5),rep('SD-MET-L',5),rep('CR-L',5)),ellipse = TRUE)
p <- ggbiplot(muscle_exprs.pca, var.axes = FALSE,groups = c(rep('SD-L',5),rep('SD-MET-L',5),rep('CR-L',4)),ellipse = TRUE)
p + ggtitle('PCA of Mouse Muscle Samples')
p <- ggbiplot(muscle_exprs.pca, var.axes = FALSE,groups = c(rep('SD-L',5),rep('SD-MET-L',5),rep('CR-L',4)))
p + ggtitle('PCA of Mouse Muscle Samples')
human_exprs <- read.csv('/Users/howard/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_human_expression_norm.csv', stringsAsFactors = FALSE)
human_exprs <- read.csv('/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_human_expression_norm.csv', stringsAsFactors = FALSE)
human_pheno <- read.csv('/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_human_pheno.csv', stringsAsFactors = FALSE)
human_exprs <- aggregate(.~X,data=human_exprs,FUN=median)
human_exprs.melt <- melt(human_exprs)
p <- ggplot(human_exprs.melt, aes(factor(variable), value))
p + geom_boxplot()+theme(axis.text.x = element_text(angle=35,hjust=1))+labs(x='Sample',y='RPKM')+ggtitle('Gene Expression of Human Samples')
human_exprs <- read.csv('/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_human_expression.csv', stringsAsFactors = FALSE)
View(human_exprs)
human_exprs <- aggregate(.~X,data=human_exprs,FUN=median)
human_exprs.melt <- melt(human_exprs)
p <- ggplot(human_exprs.melt, aes(factor(variable), value))
p + geom_boxplot()+theme(axis.text.x = element_text(angle=35,hjust=1))+labs(x='Sample',y='Log Z-Score')+ggtitle('Gene Expression of Human Samples')
human_exprs.norm <- log(human_exprs)
human_exprs.norm <- scale(human_exprs.norm)
row.names(human_exprs) <- human_exprs$X
human_exprs$X <- NULL
human_exprs.norm <- log(human_exprs)
human_exprs.norm <- scale(human_exprs.norm)
human_exprs.melt <- melt(human_exprs.norm)
p <- ggplot(human_exprs.melt, aes(factor(variable), value))
p + geom_boxplot()+theme(axis.text.x = element_text(angle=35,hjust=1))+labs(x='Sample',y='Log Z-Score')+ggtitle('Gene Expression of Human Samples')
View(human_exprs.melt)
p <- ggplot(human_exprs.melt, aes(factor(X2), value))
p + geom_boxplot()+theme(axis.text.x = element_text(angle=35,hjust=1))+labs(x='Sample',y='Log Z-Score')+ggtitle('Gene Expression of Human Samples')
human_exprs <- read.csv('/Users/howar/Dropbox/Boston University/Systems Biology of Human Disease/Final Project/BE700_human_expression.csv', stringsAsFactors = FALSE)
human_exprs <- aggregate(.~X,data=human_exprs,FUN=median)
row.names(human_exprs) <- human_exprs$X
human_exprs$X <- NULL
human_exprs.norm <- scale(human_exprs.norm)
human_exprs.melt <- melt(human_exprs.norm)
p <- ggplot(human_exprs.melt, aes(factor(X2), value))
p + geom_boxplot()+theme(axis.text.x = element_text(angle=35,hjust=1))+labs(x='Sample',y='Log Z-Score')+ggtitle('Gene Expression of Human Samples')
human_exprs.norm <- scale(human_exprs)
human_exprs.melt <- melt(human_exprs.norm)
p <- ggplot(human_exprs.melt, aes(factor(X2), value))
p + geom_boxplot()+theme(axis.text.x = element_text(angle=35,hjust=1))+labs(x='Sample',y='Log Z-Score')+ggtitle('Gene Expression of Human Samples')
library(shiny)
library(taxize)
load("C:/Users/howar/Dropbox/Boston University/Johnson/ncbi_ref_seq.RData")
setwd('/Users/howar/Documents/GitHub/MetaScope/')
runApp('inst/shiny/UI/UI_ref_seq_v2.R')
View(class_table.bacteria)
View(archaea_table)
classification(1204725,db='ncbi')
test_table <- classification(1204725,db='ncbi')
test_table <- test_table[[1]]
View(test_table)
test_table$rank[-1]
test_table$rank[10]
test_table$rank[10]=='no rank'
test_table$rank[10]=='no rank' & test_table$rank[9]=='species'
test_table$rank[10]=='no rank' & test_table$rank[9]!='species'
test_table$rank[nrow(test_table)]=='no rank' & test_table$rank[nrow(test_table)-1]!='species'
test_table$rank[nrow(test_table)]=='no rank' & test_table$rank[nrow(test_table)-1]=='species'
test_table$rank[nrow(test_table)] = 'strain'
null_test <- NA
is.null(null_test)
null_test <- NULL
is.null(null_test)
null_test <- NA
is.na(null_test)
taxon_ranks = c('superkingdom','kingdom','phylum','class','order','family','genus','species','strain')
get_classification <- function(class_table){
output <- data.frame(name=character(),
rank=character(),
id=character(),
parent_taxon=character(),
parent_rank=character())
tax_id <- unique(class_table$taxid)
counter <- 1
for(i in tax_id){
if(counter%%100 == 0){
print(paste("Got classification for ",counter," out of ",length(species_id), ' species',sep=""))
}
Sys.sleep(0.1)
t <- classification(i,db='ncbi')[[1]]
if(!is.na(t)){
if(t$rank[nrow(t)]=='no rank' & t$rank[nrow(t)-1]=='species'){
t$rank[nrow(t)] <- 'strain'
}
t <- t[which(t$rank %in% taxon_ranks),]
t <- mutate(t, parent_taxon = lag(name))
t <- mutate(t, parent_rank = lag(rank))
output <- rbind(output,t)
}
counter <- counter + 1
}
return(output)
}
class_table.archaea <- get_classification(archaea_table)
library(dplyr)
Sys.setenv(ENTREZ_KEY = 'd583e89548bcd0513dac8e3b1f7bf6993608')
class_table.archaea <- get_classification(archaea_table)
get_classification <- function(class_table){
output <- data.frame(name=character(),
rank=character(),
id=character(),
parent_taxon=character(),
parent_rank=character())
tax_id <- unique(class_table$taxid)
counter <- 1
for(i in tax_id){
if(counter%%100 == 0){
print(paste("Got classification for ",counter," out of ",length(tax_id), ' species',sep=""))
}
Sys.sleep(0.1)
t <- classification(i,db='ncbi')[[1]]
if(!is.na(t)){
if(t$rank[nrow(t)]=='no rank' & t$rank[nrow(t)-1]=='species'){
t$rank[nrow(t)] <- 'strain'
}
t <- t[which(t$rank %in% taxon_ranks),]
t <- mutate(t, parent_taxon = lag(name))
t <- mutate(t, parent_rank = lag(rank))
output <- rbind(output,t)
}
counter <- counter + 1
}
return(output)
}
class_table.archaea <- get_classification(archaea_table)
View(class_table.archaea)
class_table.fungi <- get_classification(fungi_table)
View(class_table.fungi)
class_table.plant <- get_classification(plant_table)
class_table.protozoa <- get_classification(protozoa_table)
class_table.vert_mam <- get_classification(vertebrate_mammalian_table)
class_table.vert_other <- get_classification(vertebrate_other_table)
class_table.invertebrate <- get_classification(invertebrate_table)
save.image("C:/Users/howar/Dropbox/Boston University/Johnson/ncbi_ref_seq.RData")
